"""modelagem final do banco

Revision ID: 3947915f629e
Revises: 
Create Date: 2025-08-27 00:44:10.270704

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3947915f629e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinicas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome_fantasia', sa.String(length=255), nullable=False),
    sa.Column('cnpj', sa.String(length=14), nullable=False),
    sa.Column('telefone_contato', sa.String(length=13), nullable=True),
    sa.Column('logradouro', sa.String(length=255), nullable=True),
    sa.Column('numero', sa.String(length=6), nullable=True),
    sa.Column('bairro', sa.String(length=100), nullable=True),
    sa.Column('estado', sa.String(length=2), nullable=True),
    sa.Column('cidade', sa.String(length=100), nullable=True),
    sa.Column('cep', sa.String(length=8), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('especies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('desc', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('perfis',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('desc', sa.String(), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('racas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('id_especie', sa.UUID(), nullable=False),
    sa.Column('desc', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_especie'], ['especies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('usuarios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('senha', sa.String(length=60), nullable=False),
    sa.Column('salt', sa.String(), nullable=False),
    sa.Column('telefone', sa.String(length=13), nullable=True),
    sa.Column('crmv', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('id_perfil', sa.UUID(), nullable=False),
    sa.Column('id_clinica', sa.UUID(), nullable=True),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_clinica'], ['clinicas.id'], ),
    sa.ForeignKeyConstraint(['id_perfil'], ['perfis.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('agendas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dia_semana', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('hora_inicio', sa.DateTime(), nullable=True),
    sa.Column('hora_fim', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.Column('id_veterinario', sa.UUID(), nullable=False),
    sa.Column('id_clinica', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id_clinica'], ['clinicas.id'], ),
    sa.ForeignKeyConstraint(['id_veterinario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('pets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('data_nascimento', sa.DateTime(), nullable=True),
    sa.Column('sexo', sa.String(length=1), nullable=True),
    sa.Column('cor', sa.String(length=50), nullable=True),
    sa.Column('obs', sa.String(length=255), nullable=True),
    sa.Column('id_raca', sa.UUID(), nullable=False),
    sa.Column('id_tutor', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_raca'], ['racas.id'], ),
    sa.ForeignKeyConstraint(['id_tutor'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('atendimentos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dthr_atendimento', sa.DateTime(), nullable=False),
    sa.Column('motivo', sa.String(length=255), nullable=False),
    sa.Column('id_pet', sa.UUID(), nullable=False),
    sa.Column('id_veterinario', sa.UUID(), nullable=False),
    sa.Column('id_clinica', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_clinica'], ['clinicas.id'], ),
    sa.ForeignKeyConstraint(['id_pet'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['id_veterinario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('vacinas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome_vacina', sa.String(length=100), nullable=False),
    sa.Column('data_aplicacao', sa.Date(), nullable=False),
    sa.Column('data_proxima_dose', sa.Date(), nullable=True),
    sa.Column('lote', sa.String(length=50), nullable=True),
    sa.Column('id_pet', sa.UUID(), nullable=False),
    sa.Column('id_veterinario', sa.UUID(), nullable=True),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_pet'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['id_veterinario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    op.create_table('prontuarios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amnese', sa.String(length=255), nullable=False),
    sa.Column('exame_fisico', sa.String(length=255), nullable=True),
    sa.Column('suspeita_diaginostica', sa.String(length=255), nullable=True),
    sa.Column('diagnostico_final', sa.String(length=255), nullable=True),
    sa.Column('tratamento_prescrito', sa.String(length=255), nullable=True),
    sa.Column('obs_retorno', sa.String(length=255), nullable=True),
    sa.Column('id_atendimento', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dthr_alt', sa.DateTime(), nullable=False),
    sa.Column('dthr_ins', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_atendimento'], ['atendimentos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prontuarios')
    op.drop_table('vacinas')
    op.drop_table('atendimentos')
    op.drop_table('pets')
    op.drop_table('agendas')
    op.drop_table('usuarios')
    op.drop_table('racas')
    op.drop_table('perfis')
    op.drop_table('especies')
    op.drop_table('clinicas')
    # ### end Alembic commands ###
